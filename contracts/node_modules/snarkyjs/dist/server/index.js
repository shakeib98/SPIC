var bn=Object.create;var ge=Object.defineProperty;var wn=Object.getOwnPropertyDescriptor;var Sn=Object.getOwnPropertyNames;var Fn=Object.getPrototypeOf,Tn=Object.prototype.hasOwnProperty;var je=t=>ge(t,"__esModule",{value:!0});var pe=(t,e)=>{je(t);for(var n in e)ge(t,n,{get:e[n],enumerable:!0})},Cn=(t,e,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of Sn(e))!Tn.call(t,o)&&o!=="default"&&ge(t,o,{get:()=>e[o],enumerable:!(n=wn(e,o))||n.enumerable});return t},de=t=>Cn(je(ge(t!=null?bn(Fn(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);pe(exports,{Body:()=>L,Bool:()=>b,Character:()=>U,Circuit:()=>g,CircuitString:()=>D,CircuitValue:()=>P,Encoding:()=>Tt,Encryption:()=>wt,Field:()=>u,Group:()=>M,Int64:()=>f,Ledger:()=>w,Mina:()=>gt,Party:()=>v,Permission:()=>k,Permissions:()=>re,Pickles:()=>fe,Poseidon:()=>E,Preconditions:()=>Fe,PrivateKey:()=>F,PublicKey:()=>S,Scalar:()=>I,Signature:()=>ne,SmartContract:()=>rn,State:()=>ln,Types:()=>Q,UInt32:()=>y,UInt64:()=>c,ZkappStateLength:()=>ee,addCachedAccount:()=>Qt,addMissingProofs:()=>rt,addMissingSignatures:()=>ot,arrayProp:()=>We,asFieldElementsToConstant:()=>jn,circuitArray:()=>X,circuitMain:()=>Ln,circuitValueEquals:()=>Y,cloneCircuitValue:()=>A,declareMethods:()=>So,declareState:()=>an,deploy:()=>vo,fetchAccount:()=>Ae,fetchLastBlock:()=>yt,getSrs:()=>xn,isReady:()=>zn,jsLayout:()=>O,matrixProp:()=>Un,method:()=>on,parseFetchedAccount:()=>Ee,partiesToJson:()=>le,prop:()=>B,public_:()=>Mn,recoverVerificationKey:()=>Nn,sendZkapp:()=>Be,sendZkappQuery:()=>me,serializeVerificationKey:()=>On,setGraphqlEndpoint:()=>Pe,shutdown:()=>It,signFeePayer:()=>wo,signJsonTransaction:()=>it,state:()=>vt,toPartiesUnsafe:()=>Vt,toPartyUnsafe:()=>Ce});var Ct=require("./node_bindings/snarky_js_node.bc.js");var Pt=()=>Ct,At=Ct.snarky_ready;function Ue(){return globalThis.jsoo_runtime.plonk_wasm}var Et=!1;async function It(){global.wasm_rayon_poolbuilder&&!Et&&(Et=!0,global.wasm_rayon_poolbuilder.free(),await Promise.all(global.wasm_workers.map(t=>t.terminate())),process.exit(0))}var Bt=[{name:"Field",props:[{name:"one",type:"object"},{name:"zero",type:"object"},{name:"minusOne",type:"object"},{name:"ORDER",type:"bigint"},{name:"random",type:"function"},{name:"add",type:"function"},{name:"sub",type:"function"},{name:"mul",type:"function"},{name:"div",type:"function"},{name:"neg",type:"function"},{name:"inv",type:"function"},{name:"square",type:"function"},{name:"sqrt",type:"function"},{name:"toString",type:"function"},{name:"sizeInFields",type:"function"},{name:"toFields",type:"function"},{name:"ofFields",type:"function"},{name:"assertEqual",type:"function"},{name:"assertBoolean",type:"function"},{name:"isZero",type:"function"},{name:"ofBits",type:"function"},{name:"toBits",type:"function"},{name:"equal",type:"function"},{name:"toJSON",type:"function"},{name:"fromJSON",type:"function"},{name:"fromNumber",type:"function"},{name:"fromString",type:"function"},{name:"fromBigInt",type:"function"},{name:"check",type:"function"}]},{name:"Bool",props:[{name:"true",type:"object"},{name:"false",type:"object"},{name:"toField",type:"function"},{name:"Unsafe",type:"object"},{name:"not",type:"function"},{name:"and",type:"function"},{name:"or",type:"function"},{name:"assertEqual",type:"function"},{name:"equal",type:"function"},{name:"count",type:"function"},{name:"sizeInFields",type:"function"},{name:"toFields",type:"function"},{name:"ofFields",type:"function"},{name:"check",type:"function"},{name:"toJSON",type:"function"},{name:"fromJSON",type:"function"}]},{name:"Circuit",props:[{name:"runAndCheck",type:"function"},{name:"asProver",type:"function"},{name:"witness",type:"function"},{name:"array",type:"function"},{name:"generateKeypair",type:"function"},{name:"prove",type:"function"},{name:"verify",type:"function"},{name:"assertEqual",type:"function"},{name:"equal",type:"function"},{name:"toFields",type:"function"},{name:"inProver",type:"function"},{name:"inCheckedComputation",type:"function"},{name:"if",type:"function"},{name:"getVerificationKey",type:"function"}]},{name:"Poseidon",props:[{name:"hash",type:"function"},{name:"spongeCreate",type:"function"},{name:"spongeAbsorb",type:"function"},{name:"spongeSqueeze",type:"function"}]},{name:"Group",props:[{name:"generator",type:"object"},{name:"add",type:"function"},{name:"sub",type:"function"},{name:"neg",type:"function"},{name:"scale",type:"function"},{name:"assertEqual",type:"function"},{name:"equal",type:"function"},{name:"toFields",type:"function"},{name:"ofFields",type:"function"},{name:"sizeInFields",type:"function"},{name:"check",type:"function"},{name:"toJSON",type:"function"},{name:"fromJSON",type:"function"}]},{name:"Scalar",props:[{name:"toFields",type:"function"},{name:"sizeInFields",type:"function"},{name:"ofFields",type:"function"},{name:"random",type:"function"},{name:"ofBits",type:"function"},{name:"toJSON",type:"function"},{name:"fromJSON",type:"function"},{name:"check",type:"function"}]},{name:"Ledger",props:[{name:"create",type:"function"},{name:"hashTransaction",type:"function"},{name:"hashTransactionChecked",type:"function"},{name:"transactionCommitments",type:"function"},{name:"zkappPublicInput",type:"function"},{name:"signFieldElement",type:"function"},{name:"signFeePayer",type:"function"},{name:"signOtherParty",type:"function"},{name:"verifyPartyProof",type:"function"},{name:"publicKeyToString",type:"function"},{name:"publicKeyOfString",type:"function"},{name:"privateKeyToString",type:"function"},{name:"privateKeyOfString",type:"function"},{name:"fieldToBase58",type:"function"},{name:"fieldOfBase58",type:"function"},{name:"memoToBase58",type:"function"},{name:"fieldsOfJson",type:"function"},{name:"hashPartyFromFields",type:"function"}]},{name:"Pickles",props:[{name:"compile",type:"function"},{name:"proofToString",type:"function"}]}];function zt(t,e,n){let o={};for(let r of n){let i=r.name,l=function(...a){if(!e())throw Error(An(i));let s=t();return new s[i](...a)};for(let a of r.props){let s=a.name;a.type==="function"?l[s]=function(...d){if(!e())throw Error(En(i,s));return t()[i][s].apply(this,d)}:Object.defineProperty(l,s,{get:function(){return t()[i][s]}})}o[i]=l}return o}var An=t=>`Cannot call class constructor because snarkyjs has not finished loading.
Try calling \`await isReady\` before \`new ${t}()\``,En=(t,e)=>`Cannot call static method because snarkyjs has not finished loading.
Try calling \`await isReady\` before \`${t}.${e}()\``;var Q={};pe(Q,{Bool:()=>b,Field:()=>u,Json:()=>Ge,Parties:()=>In,Party:()=>Bn,convertEventsToFields:()=>Re,convertEventsToJson:()=>He,convertStringWithHashToFields:()=>Ve,convertStringWithHashToJson:()=>Ke,toFields:()=>ve,toFieldsLeafTypes:()=>$e,toJson:()=>ye,toJsonLeafTypes:()=>Je});function Me(t){return t}function Le(t){return t.toString()}var _e={PublicKey(t){return w.publicKeyToString(t)},Field:Le,Bool(t){return t.toBoolean()},AuthRequired(t){let e=Number(t.constant.toBoolean()),n=Number(t.signatureNecessary.toBoolean()),o=Number(t.signatureSufficient.toBoolean());switch(`${e}${n}${o}`){case"110":return"Impossible";case"101":return"None";case"000":return"Proof";case"011":return"Signature";case"001":return"Either";default:throw Error("Unexpected permission")}},UInt32:Le,UInt64:Le,TokenId(t){return w.fieldToBase58(t)},Sign(t){if(t.toString()==="1")return"Positive";if(t.neg().toString()==="1")return"Negative";throw Error(`Invalid Sign: ${t}`)},BlockTimeInterval(t){return null},number:Me,null:Me,undefined(t){return null},string:Me};function ye(t,e){if(!(t in _e))throw Error(`toJson: unsupported type "${t}"`);return _e[t](e)}function W(t){return t.toFields()}function ke(t){return[]}var De={PublicKey({g:t}){let{x:e,y:n}=t,o=n.toBits()[0];return[e,o.toField()]},Field:W,Bool:W,AuthRequired(t){return[t.constant,t.signatureNecessary,t.signatureSufficient].map(W).flat()},UInt32:W,UInt64:W,TokenId:W,Sign:W,number:ke,null:ke,undefined:ke,string:ke};function ve(t,e){if(!(t in De))throw Error(`toFields: unsupported type "${t}"`);return De[t](e)}var Je=new Set(Object.keys(_e)),$e=new Set(Object.keys(De));function He({data:t}){return t.map(e=>e.map(n=>ye("Field",n)))}function Re({hash:t}){return[t]}function Ke({data:t}){return t}function Ve({hash:t}){return[t]}function $(t,e,n){let{type:o,inner:r,layout:i,name:l,optionType:a,checkedTypeName:s}=t;if(s)return n[s](e);if(o==="array")return e.map(d=>$(r,d,n));if(o==="option")switch(a){case"implicit":return $(r,e,n);case"flaggedOption":return e.isSome.toBoolean()?$(r,e.value,n):null;default:return e!==void 0?$(r,e,n):null}if(o==="object"){if(Je.has(l))return ye(l,e);let d={};for(let{key:p,value:m}of i)d[p]=$(m,e[p],n);return d}return ye(o,e)}function Z(t,e,n){let{type:o,inner:r,layout:i,name:l,optionType:a,checkedTypeName:s}=t;if(s)return n[s](e);if(o==="array")return e.map(p=>Z(r,p,n)).flat();if(o==="option")switch(a){case"implicit":return Z(r,e,n);case"flaggedOption":return e.isSome.toFields().concat(Z(r,e.value,n));default:return[]}if(o==="object"){if($e.has(l))return ve(l,e);let p=[];for(let{key:m,value:C}of i){let x=Z(C,e[m],n);p.push(...x)}return p}return ve(o,e)}var Ge={};je(Ge);var O={Parties:{type:"object",name:"Parties",docs:null,layout:[{key:"feePayer",value:{type:"object",name:"ZkappPartyFeePayer",docs:null,layout:[{key:"body",value:{type:"object",name:"FeePayerPartyBody",docs:null,layout:[{key:"publicKey",value:{type:"PublicKey"},docs:null},{key:"update",value:{type:"object",name:"PartyUpdate",docs:null,layout:[{key:"appState",value:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}}},docs:null},{key:"delegate",value:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},docs:null},{key:"verificationKey",value:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"VerificationKeyWithHash",docs:null,layout:[{key:"data",value:{type:"string"},docs:null},{key:"hash",value:{type:"Field"},docs:null}]}},docs:null},{key:"permissions",value:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Permissions",docs:null,layout:[{key:"editState",value:{type:"AuthRequired"},docs:null},{key:"send",value:{type:"AuthRequired"},docs:null},{key:"receive",value:{type:"AuthRequired"},docs:null},{key:"setDelegate",value:{type:"AuthRequired"},docs:null},{key:"setPermissions",value:{type:"AuthRequired"},docs:null},{key:"setVerificationKey",value:{type:"AuthRequired"},docs:null},{key:"setZkappUri",value:{type:"AuthRequired"},docs:null},{key:"editSequenceState",value:{type:"AuthRequired"},docs:null},{key:"setTokenSymbol",value:{type:"AuthRequired"},docs:null},{key:"incrementNonce",value:{type:"AuthRequired"},docs:null},{key:"setVotingFor",value:{type:"AuthRequired"},docs:null}]}},docs:null},{key:"zkappUri",value:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Events",docs:null,layout:[{key:"data",value:{type:"string"},docs:null},{key:"hash",value:{type:"Field"},docs:null}]},checkedTypeName:"StringWithHash"}},docs:null},{key:"tokenSymbol",value:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Events",docs:null,layout:[{key:"data",value:{type:"string"},docs:null},{key:"hash",value:{type:"Field"},docs:null}]},checkedTypeName:"StringWithHash"}},docs:null},{key:"timing",value:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Timing",docs:null,layout:[{key:"initialMinimumBalance",value:{type:"UInt64"},docs:null},{key:"cliffTime",value:{type:"UInt32"},docs:null},{key:"cliffAmount",value:{type:"UInt64"},docs:null},{key:"vestingPeriod",value:{type:"UInt32"},docs:null},{key:"vestingIncrement",value:{type:"UInt64"},docs:null}]}},docs:null},{key:"votingFor",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null}]},docs:null},{key:"fee",value:{type:"UInt64"},docs:null},{key:"events",value:{type:"array",inner:{type:"array",inner:{type:"Field"}},checkedType:{type:"object",name:"Events",docs:null,layout:[{key:"data",value:{type:"array",inner:{type:"array",inner:{type:"Field"}}},docs:null},{key:"hash",value:{type:"Field"},docs:null}]},checkedTypeName:"Events"},docs:null},{key:"sequenceEvents",value:{type:"array",inner:{type:"array",inner:{type:"Field"}},checkedType:{type:"object",name:"Events",docs:null,layout:[{key:"data",value:{type:"array",inner:{type:"array",inner:{type:"Field"}}},docs:null},{key:"hash",value:{type:"Field"},docs:null}]},checkedTypeName:"Events"},docs:null},{key:"networkPrecondition",value:{type:"object",name:"NetworkPrecondition",docs:null,layout:[{key:"snarkedLedgerHash",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"timestamp",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"BlockTimeInterval",docs:null,layout:[{key:"lower",value:{type:"UInt64"},docs:null},{key:"upper",value:{type:"UInt64"},docs:null}]}},docs:null},{key:"blockchainLength",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"LengthInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null},{key:"minWindowDensity",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"LengthInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null},{key:"totalCurrency",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,layout:[{key:"lower",value:{type:"UInt64"},docs:null},{key:"upper",value:{type:"UInt64"},docs:null}]}},docs:null},{key:"globalSlotSinceHardFork",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"GlobalSlotInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null},{key:"globalSlotSinceGenesis",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"GlobalSlotInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null},{key:"stakingEpochData",value:{type:"object",name:"EpochDataPrecondition",docs:null,layout:[{key:"ledger",value:{type:"object",name:"EpochLedgerPrecondition",docs:null,layout:[{key:"hash",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"totalCurrency",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,layout:[{key:"lower",value:{type:"UInt64"},docs:null},{key:"upper",value:{type:"UInt64"},docs:null}]}},docs:null}]},docs:null},{key:"seed",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"startCheckpoint",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"lockCheckpoint",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"epochLength",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"LengthInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null}]},docs:null},{key:"nextEpochData",value:{type:"object",name:"EpochDataPrecondition",docs:null,layout:[{key:"ledger",value:{type:"object",name:"EpochLedgerPrecondition",docs:null,layout:[{key:"hash",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"totalCurrency",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,layout:[{key:"lower",value:{type:"UInt64"},docs:null},{key:"upper",value:{type:"UInt64"},docs:null}]}},docs:null}]},docs:null},{key:"seed",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"startCheckpoint",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"lockCheckpoint",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"epochLength",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"LengthInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null}]},docs:null}]},docs:null},{key:"nonce",value:{type:"UInt32"},docs:null}]},docs:null},{key:"authorization",value:{type:"string"},docs:null}]},docs:null},{key:"otherParties",value:{type:"array",inner:{type:"object",name:"ZkappParty",docs:"A party to a zkApp transaction",layout:[{key:"body",value:{type:"object",name:"PartyBody",docs:null,layout:[{key:"publicKey",value:{type:"PublicKey"},docs:null},{key:"tokenId",value:{type:"TokenId"},docs:null},{key:"update",value:{type:"object",name:"PartyUpdate",docs:null,layout:[{key:"appState",value:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}}},docs:null},{key:"delegate",value:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},docs:null},{key:"verificationKey",value:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"VerificationKeyWithHash",docs:null,layout:[{key:"data",value:{type:"string"},docs:null},{key:"hash",value:{type:"Field"},docs:null}]}},docs:null},{key:"permissions",value:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Permissions",docs:null,layout:[{key:"editState",value:{type:"AuthRequired"},docs:null},{key:"send",value:{type:"AuthRequired"},docs:null},{key:"receive",value:{type:"AuthRequired"},docs:null},{key:"setDelegate",value:{type:"AuthRequired"},docs:null},{key:"setPermissions",value:{type:"AuthRequired"},docs:null},{key:"setVerificationKey",value:{type:"AuthRequired"},docs:null},{key:"setZkappUri",value:{type:"AuthRequired"},docs:null},{key:"editSequenceState",value:{type:"AuthRequired"},docs:null},{key:"setTokenSymbol",value:{type:"AuthRequired"},docs:null},{key:"incrementNonce",value:{type:"AuthRequired"},docs:null},{key:"setVotingFor",value:{type:"AuthRequired"},docs:null}]}},docs:null},{key:"zkappUri",value:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Events",docs:null,layout:[{key:"data",value:{type:"string"},docs:null},{key:"hash",value:{type:"Field"},docs:null}]},checkedTypeName:"StringWithHash"}},docs:null},{key:"tokenSymbol",value:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Events",docs:null,layout:[{key:"data",value:{type:"string"},docs:null},{key:"hash",value:{type:"Field"},docs:null}]},checkedTypeName:"StringWithHash"}},docs:null},{key:"timing",value:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Timing",docs:null,layout:[{key:"initialMinimumBalance",value:{type:"UInt64"},docs:null},{key:"cliffTime",value:{type:"UInt32"},docs:null},{key:"cliffAmount",value:{type:"UInt64"},docs:null},{key:"vestingPeriod",value:{type:"UInt32"},docs:null},{key:"vestingIncrement",value:{type:"UInt64"},docs:null}]}},docs:null},{key:"votingFor",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null}]},docs:null},{key:"balanceChange",value:{type:"object",name:"BalanceChange",docs:null,layout:[{key:"magnitude",value:{type:"UInt64"},docs:null},{key:"sgn",value:{type:"Sign"},docs:null}]},docs:null},{key:"incrementNonce",value:{type:"Bool"},docs:null},{key:"events",value:{type:"array",inner:{type:"array",inner:{type:"Field"}},checkedType:{type:"object",name:"Events",docs:null,layout:[{key:"data",value:{type:"array",inner:{type:"array",inner:{type:"Field"}}},docs:null},{key:"hash",value:{type:"Field"},docs:null}]},checkedTypeName:"Events"},docs:null},{key:"sequenceEvents",value:{type:"array",inner:{type:"array",inner:{type:"Field"}},checkedType:{type:"object",name:"Events",docs:null,layout:[{key:"data",value:{type:"array",inner:{type:"array",inner:{type:"Field"}}},docs:null},{key:"hash",value:{type:"Field"},docs:null}]},checkedTypeName:"Events"},docs:null},{key:"callData",value:{type:"Field"},docs:null},{key:"callDepth",value:{type:"number"},docs:null},{key:"preconditions",value:{type:"object",name:"Preconditions",docs:null,layout:[{key:"network",value:{type:"object",name:"NetworkPrecondition",docs:null,layout:[{key:"snarkedLedgerHash",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"timestamp",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"BlockTimeInterval",docs:null,layout:[{key:"lower",value:{type:"UInt64"},docs:null},{key:"upper",value:{type:"UInt64"},docs:null}]}},docs:null},{key:"blockchainLength",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"LengthInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null},{key:"minWindowDensity",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"LengthInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null},{key:"totalCurrency",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,layout:[{key:"lower",value:{type:"UInt64"},docs:null},{key:"upper",value:{type:"UInt64"},docs:null}]}},docs:null},{key:"globalSlotSinceHardFork",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"GlobalSlotInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null},{key:"globalSlotSinceGenesis",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"GlobalSlotInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null},{key:"stakingEpochData",value:{type:"object",name:"EpochDataPrecondition",docs:null,layout:[{key:"ledger",value:{type:"object",name:"EpochLedgerPrecondition",docs:null,layout:[{key:"hash",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"totalCurrency",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,layout:[{key:"lower",value:{type:"UInt64"},docs:null},{key:"upper",value:{type:"UInt64"},docs:null}]}},docs:null}]},docs:null},{key:"seed",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"startCheckpoint",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"lockCheckpoint",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"epochLength",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"LengthInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null}]},docs:null},{key:"nextEpochData",value:{type:"object",name:"EpochDataPrecondition",docs:null,layout:[{key:"ledger",value:{type:"object",name:"EpochLedgerPrecondition",docs:null,layout:[{key:"hash",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"totalCurrency",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,layout:[{key:"lower",value:{type:"UInt64"},docs:null},{key:"upper",value:{type:"UInt64"},docs:null}]}},docs:null}]},docs:null},{key:"seed",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"startCheckpoint",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"lockCheckpoint",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"epochLength",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"LengthInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null}]},docs:null}]},docs:null},{key:"account",value:{type:"object",name:"AccountPrecondition",docs:null,layout:[{key:"balance",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"BalanceInterval",docs:null,layout:[{key:"lower",value:{type:"UInt64"},docs:null},{key:"upper",value:{type:"UInt64"},docs:null}]}},docs:null},{key:"nonce",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"NonceInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null},{key:"receiptChainHash",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"delegate",value:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},docs:null},{key:"state",value:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}}},docs:null},{key:"sequenceState",value:{type:"option",optionType:"implicit",inner:{type:"Field"}},docs:null},{key:"provedState",value:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}},docs:null}]},docs:null}]},docs:null},{key:"useFullCommitment",value:{type:"Bool"},docs:null},{key:"caller",value:{type:"TokenId"},docs:null}]},docs:null},{key:"authorization",value:{type:"object",name:"Control",docs:null,layout:[{key:"proof",value:{type:"option",optionType:"orUndefined",inner:{type:"string"}},docs:null},{key:"signature",value:{type:"option",optionType:"orUndefined",inner:{type:"string"}},docs:null}]},docs:null}]}},docs:null},{key:"memo",value:{type:"string"},docs:null}]},Party:{type:"object",name:"ZkappParty",docs:"A party to a zkApp transaction",layout:[{key:"body",value:{type:"object",name:"PartyBody",docs:null,layout:[{key:"publicKey",value:{type:"PublicKey"},docs:null},{key:"tokenId",value:{type:"TokenId"},docs:null},{key:"update",value:{type:"object",name:"PartyUpdate",docs:null,layout:[{key:"appState",value:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}}},docs:null},{key:"delegate",value:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},docs:null},{key:"verificationKey",value:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"VerificationKeyWithHash",docs:null,layout:[{key:"data",value:{type:"string"},docs:null},{key:"hash",value:{type:"Field"},docs:null}]}},docs:null},{key:"permissions",value:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Permissions",docs:null,layout:[{key:"editState",value:{type:"AuthRequired"},docs:null},{key:"send",value:{type:"AuthRequired"},docs:null},{key:"receive",value:{type:"AuthRequired"},docs:null},{key:"setDelegate",value:{type:"AuthRequired"},docs:null},{key:"setPermissions",value:{type:"AuthRequired"},docs:null},{key:"setVerificationKey",value:{type:"AuthRequired"},docs:null},{key:"setZkappUri",value:{type:"AuthRequired"},docs:null},{key:"editSequenceState",value:{type:"AuthRequired"},docs:null},{key:"setTokenSymbol",value:{type:"AuthRequired"},docs:null},{key:"incrementNonce",value:{type:"AuthRequired"},docs:null},{key:"setVotingFor",value:{type:"AuthRequired"},docs:null}]}},docs:null},{key:"zkappUri",value:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Events",docs:null,layout:[{key:"data",value:{type:"string"},docs:null},{key:"hash",value:{type:"Field"},docs:null}]},checkedTypeName:"StringWithHash"}},docs:null},{key:"tokenSymbol",value:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Events",docs:null,layout:[{key:"data",value:{type:"string"},docs:null},{key:"hash",value:{type:"Field"},docs:null}]},checkedTypeName:"StringWithHash"}},docs:null},{key:"timing",value:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Timing",docs:null,layout:[{key:"initialMinimumBalance",value:{type:"UInt64"},docs:null},{key:"cliffTime",value:{type:"UInt32"},docs:null},{key:"cliffAmount",value:{type:"UInt64"},docs:null},{key:"vestingPeriod",value:{type:"UInt32"},docs:null},{key:"vestingIncrement",value:{type:"UInt64"},docs:null}]}},docs:null},{key:"votingFor",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null}]},docs:null},{key:"balanceChange",value:{type:"object",name:"BalanceChange",docs:null,layout:[{key:"magnitude",value:{type:"UInt64"},docs:null},{key:"sgn",value:{type:"Sign"},docs:null}]},docs:null},{key:"incrementNonce",value:{type:"Bool"},docs:null},{key:"events",value:{type:"array",inner:{type:"array",inner:{type:"Field"}},checkedType:{type:"object",name:"Events",docs:null,layout:[{key:"data",value:{type:"array",inner:{type:"array",inner:{type:"Field"}}},docs:null},{key:"hash",value:{type:"Field"},docs:null}]},checkedTypeName:"Events"},docs:null},{key:"sequenceEvents",value:{type:"array",inner:{type:"array",inner:{type:"Field"}},checkedType:{type:"object",name:"Events",docs:null,layout:[{key:"data",value:{type:"array",inner:{type:"array",inner:{type:"Field"}}},docs:null},{key:"hash",value:{type:"Field"},docs:null}]},checkedTypeName:"Events"},docs:null},{key:"callData",value:{type:"Field"},docs:null},{key:"callDepth",value:{type:"number"},docs:null},{key:"preconditions",value:{type:"object",name:"Preconditions",docs:null,layout:[{key:"network",value:{type:"object",name:"NetworkPrecondition",docs:null,layout:[{key:"snarkedLedgerHash",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"timestamp",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"BlockTimeInterval",docs:null,layout:[{key:"lower",value:{type:"UInt64"},docs:null},{key:"upper",value:{type:"UInt64"},docs:null}]}},docs:null},{key:"blockchainLength",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"LengthInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null},{key:"minWindowDensity",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"LengthInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null},{key:"totalCurrency",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,layout:[{key:"lower",value:{type:"UInt64"},docs:null},{key:"upper",value:{type:"UInt64"},docs:null}]}},docs:null},{key:"globalSlotSinceHardFork",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"GlobalSlotInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null},{key:"globalSlotSinceGenesis",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"GlobalSlotInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null},{key:"stakingEpochData",value:{type:"object",name:"EpochDataPrecondition",docs:null,layout:[{key:"ledger",value:{type:"object",name:"EpochLedgerPrecondition",docs:null,layout:[{key:"hash",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"totalCurrency",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,layout:[{key:"lower",value:{type:"UInt64"},docs:null},{key:"upper",value:{type:"UInt64"},docs:null}]}},docs:null}]},docs:null},{key:"seed",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"startCheckpoint",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"lockCheckpoint",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"epochLength",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"LengthInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null}]},docs:null},{key:"nextEpochData",value:{type:"object",name:"EpochDataPrecondition",docs:null,layout:[{key:"ledger",value:{type:"object",name:"EpochLedgerPrecondition",docs:null,layout:[{key:"hash",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"totalCurrency",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,layout:[{key:"lower",value:{type:"UInt64"},docs:null},{key:"upper",value:{type:"UInt64"},docs:null}]}},docs:null}]},docs:null},{key:"seed",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"startCheckpoint",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"lockCheckpoint",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"epochLength",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"LengthInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null}]},docs:null}]},docs:null},{key:"account",value:{type:"object",name:"AccountPrecondition",docs:null,layout:[{key:"balance",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"BalanceInterval",docs:null,layout:[{key:"lower",value:{type:"UInt64"},docs:null},{key:"upper",value:{type:"UInt64"},docs:null}]}},docs:null},{key:"nonce",value:{type:"option",optionType:"implicit",inner:{type:"object",name:"NonceInterval",docs:null,layout:[{key:"lower",value:{type:"UInt32"},docs:null},{key:"upper",value:{type:"UInt32"},docs:null}]}},docs:null},{key:"receiptChainHash",value:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},docs:null},{key:"delegate",value:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},docs:null},{key:"state",value:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}}},docs:null},{key:"sequenceState",value:{type:"option",optionType:"implicit",inner:{type:"Field"}},docs:null},{key:"provedState",value:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}},docs:null}]},docs:null}]},docs:null},{key:"useFullCommitment",value:{type:"Bool"},docs:null},{key:"caller",value:{type:"TokenId"},docs:null}]},docs:null},{key:"authorization",value:{type:"object",name:"Control",docs:null,layout:[{key:"proof",value:{type:"option",optionType:"orUndefined",inner:{type:"string"}},docs:null},{key:"signature",value:{type:"option",optionType:"orUndefined",inner:{type:"string"}},docs:null}]},docs:null}]}};var qt={StringWithHash:Ke,Events:He},xt={StringWithHash:Ve,Events:Re},In={toJson(t){return $(O.Parties,t,qt)},toFields(t){return Z(O.Parties,t,xt)}},Bn={toJson(t){return $(O.Party,t,qt)},toFields(t){return Z(O.Party,t,xt)}};var Ot=!1,zn=At.then(()=>Ot=!0),qn=()=>Ot,{Field:u,Bool:b,Circuit:g,Poseidon:E,Group:M,Scalar:I,Ledger:w,Pickles:fe}=zt(Pt,qn,Bt);function Nt(){return globalThis.jsoo_runtime}function xn(t){return t.value[2][4]}function On(t){let e=Ue(),n=Nt();return t.value[4].constructor.name==="WasmFpSrs"?e.caml_pasta_fp_plonk_verifier_index_serialize(n.caml_pasta_fp_plonk_verifier_index_to_rust(t.value)):e.caml_pasta_fq_plonk_verifier_index_serialize(n.caml_pasta_fq_plonk_verifier_index_to_rust(t.value))}function Nn(t,e){let n=Ue().caml_pasta_fp_plonk_verifier_index_deserialize(t,e),o=Nt().caml_pasta_fp_plonk_verifier_index_of_rust(n);return g.getVerificationKey(o)}var N=de(require("tslib"));var ar=de(require("reflect-metadata"));function jn(t,e){let n=t.toFields(e);return t.ofFields(n)}var P=class{static sizeInFields(){return this.prototype._fields.reduce((n,[o,r])=>n+r.sizeInFields(),0)}static toFields(e){let n=[],o=this.prototype._fields;if(o==null)return n;for(let r=0,i=o.length;r<i;++r){let[l,a]=o[r];a.toFields(e[l]).forEach(d=>n.push(d))}return n}toFields(){return this.constructor.toFields(this)}toJSON(){return this.constructor.toJSON(this)}equals(e){return g.equal(this,e)}assertEquals(e){g.assertEqual(this,e)}static ofFields(e){let n=this.prototype._fields,o=0,r=[];for(let i=0;i<n.length;++i){let l=n[i][1],a=l.sizeInFields(),s=l.ofFields(e.slice(o,o+a));r.push(s),o+=a}return new this(...r)}static toConstant(e){let n=this.toFields(e);return this.ofFields(n.map(o=>o.toConstant()))}static toJSON(e){let n={};return this.prototype._fields!==void 0&&this.prototype._fields.forEach(([r,i])=>{n[r]=i.toJSON(e[r])}),n}static fromJSON(e){let n=[],o=this.prototype._fields;switch(typeof e){case"object":if(e===null||Array.isArray(e))return null;break;default:return null}if(o!==void 0)for(let r=0;r<o.length;++r){let[i,l]=o[r];if(e[i]===void 0)return null;n.push(l.fromJSON(e[i]))}return new this(...n)}};P.check=function(t){let e=this.prototype._fields;if(e!=null)for(let n=0;n<e.length;++n){let[o,r]=e[n],i=t[o];if(r.check===void 0)throw Error("bug: circuit value without .check()");r.check(i)}};function B(t,e){let n=Reflect.getMetadata("design:type",t,e);t.hasOwnProperty("_fields")||(t._fields=[]),n===void 0||(n.toFields&&n.ofFields?t._fields.push([e,n]):console.log(`warning: property ${e} missing field element conversion methods`))}function X(t,e){return{sizeInFields(){return t.sizeInFields()*e},toFields(n){return n.map(o=>t.toFields(o)).flat()},ofFields(n){let o=[],r=t.sizeInFields();e=r*e;for(let i=0;i<e;i+=r)o.push(t.ofFields(n.slice(i,i+r)));return o},check(n){for(let o=0;o<e;o++)t.check(n[o])}}}function We(t,e){return function(n,o){n.hasOwnProperty("_fields")||(n._fields=[]),n._fields.push([o,X(t,e)])}}function Un(t,e,n){return function(o,r){o.hasOwnProperty("_fields")||(o._fields=[]),o._fields.push([r,X(X(t,n),e)])}}function Mn(t,e,n){t._public===void 0&&(t._public=[]),t._public.push(n)}function jt(t){return{sizeInFields:()=>t.reduce((e,n)=>e+n.sizeInFields(),0),toFields:e=>{if(e.length!==t.length)throw new Error(`typOfArray: Expected ${t.length}, got ${e.length}`);let n=[];for(let o=0;o<e.length;++o)n.push(...t[o].toFields(e[o]));return n},ofFields:e=>{let n=0,o=[];return t.forEach(r=>{let i=r.sizeInFields();o.push(r.ofFields(e.slice(n,n+i))),n+=i}),o},check(e){t.forEach((n,o)=>n.check(e[o]))}}}function Ln(t,e,n){let o=Reflect.getMetadata("design:paramtypes",t,e),r=o.length,i=new Set(t._public),l=new Set;for(let a=0;a<r;++a)i.has(a)||l.add(a);t.snarkyMain=(a,s)=>{let d=[];for(let p=0;p<r;++p)d.push((i.has(p)?s:a).shift());return t[e].apply(t,d)},t.snarkyWitnessTyp=jt(Array.from(l).map(a=>o[a])),t.snarkyPublicTyp=jt(Array.from(i).map(a=>o[a]))}var _n=new Set(["Field","Bool","Scalar","Group"]);function A(t){if(typeof t!="object"||t===null)return t;if(Array.isArray(t))return t.map(A);if(t instanceof Set)return new Set([...t].map(A));if(t instanceof Map)return new Map([...t].map(([n,o])=>[n,A(o)]));if(ArrayBuffer.isView(t))return new t.constructor(t);if(_n.has(t.constructor.name))return t;let e={};for(let[n,o]of Object.entries(t))e[n]={value:A(o),writable:!0,enumerable:!0,configurable:!0};return Object.create(Object.getPrototypeOf(t),e)}function Y(t,e){if(typeof t!="object"||t===null)return t===e;if(Array.isArray(t))return Array.isArray(e)&&t.length===e.length&&t.every((r,i)=>Y(r,e[i]));if(t instanceof Set)return e instanceof Set&&t.size===e.size&&[...t].every(r=>e.has(r));if(t instanceof Map)return e instanceof Map&&t.size===e.size&&[...t].every(([r,i])=>Y(i,e.get(r)));if(ArrayBuffer.isView(t)&&!(t instanceof DataView))return ArrayBuffer.isView(e)&&!(e instanceof DataView)&&Y([...t],[...e]);if("equals"in t&&typeof t.equals=="function"){let r=t.equals(e).toBoolean();if(typeof r=="boolean")return r;if(r instanceof b)return r.toBoolean()}if("toFields"in t&&typeof t.toFields=="function"&&"toFields"in e&&typeof e.toFields=="function"){let r=t.toFields(),i=e.toFields();return r.every((l,a)=>l.equals(i[a]).toBoolean())}let n=Object.entries(t).filter(([,r])=>r!==void 0),o=Object.entries(e).filter(([,r])=>r!==void 0);return n.length!==o.length?!1:n.every(([r,i])=>r in e&&Y(e[r],i))}var F=class extends P{constructor(e){super();this.s=e}static random(){return new F(I.random())}static ofBits(e){return new F(I.ofBits(e))}toPublicKey(){return new S(M.generator.scale(this.s))}static fromBase58(e){let n=w.privateKeyOfString(e);return new F(n)}toBase58(){return F.toBase58(this)}static toBase58(e){return w.privateKeyToString(e)}};(0,N.__decorate)([B,(0,N.__metadata)("design:type",I)],F.prototype,"s",void 0);var S=class extends P{constructor(e){super();this.g=e}static fromPrivateKey(e){return e.toPublicKey()}static empty(){return new S(new M(u.zero,u.zero))}isEmpty(){return this.g.x.isZero()}static fromBase58(e){let n=w.publicKeyOfString(e);return new S(n)}toBase58(){return S.toBase58(this)}static toBase58(e){return w.publicKeyToString(e)}};(0,N.__decorate)([B,(0,N.__metadata)("design:type",M)],S.prototype,"g",void 0);var ne=class extends P{constructor(e,n){super();this.r=e,this.s=n}static create(e,n){let{g:o}=S.fromPrivateKey(e),r=e.s,i=I.random(),{x:l,y:a}=M.generator.scale(i),s=a.toBits()[0].toBoolean()?i.neg():i,p=I.ofBits(E.hash(n.concat([o.x,o.y,l])).toBits()).mul(r).add(s);return new ne(l,p)}verify(e,n){let o=e.g,r=I.ofBits(E.hash(n.concat([o.x,o.y,this.r])).toBits()),i=o.scale(r).neg().add(M.generator.scale(this.s));return b.and(i.x.equals(this.r),i.y.toBits()[0].equals(!1))}};(0,N.__decorate)([B,(0,N.__metadata)("design:type",u)],ne.prototype,"r",void 0);(0,N.__decorate)([B,(0,N.__metadata)("design:type",I)],ne.prototype,"s",void 0);var j=de(require("tslib"));var c=class extends P{constructor(e){super();this.value=e}static get zero(){return new c(u.zero)}static get one(){return new c(u.one)}toString(){return this.value.toString()}static check(e){e.value.rangeCheckHelper(64).assertEquals(e.value)}static checkConstant(e){if(!e.isConstant())return e;let n=e.toBigInt();if(n<0n||n>=1n<<BigInt(this.NUM_BITS))throw Error(`UInt64: Expected number between 0 and 2^64 - 1, got ${n}`);return e}static from(e){return(e instanceof c||e instanceof y)&&(e=e.value),new this(this.checkConstant(u(e)))}static fromNumber(e){return this.from(e)}static fromString(e){return this.from(e)}static fromBigInt(e){return this.from(e)}static MAXINT(){return new c(u((1n<<64n)-1n))}divMod(e){let n=this.value,o=c.from(e).value;if(this.value.isConstant()&&o.isConstant()){let s=n.toBigInt(),d=o.toBigInt(),p=s/d,m=s-p*d;return{quotient:new c(u(p)),rest:new c(u(m))}}o=o.seal();let r=g.witness(u,()=>new u(n.toBigInt()/o.toBigInt()));r.rangeCheckHelper(c.NUM_BITS).assertEquals(r);let i=n.sub(r.mul(o)).seal();i.rangeCheckHelper(c.NUM_BITS).assertEquals(i);let l=new c(i),a=new c(r);return l.assertLt(new c(o)),{quotient:a,rest:l}}div(e){return this.divMod(e).quotient}mod(e){return this.divMod(e).rest}mul(e){let n=this.value.mul(c.from(e).value);return n.rangeCheckHelper(c.NUM_BITS).assertEquals(n),new c(n)}add(e){let n=this.value.add(c.from(e).value);return n.rangeCheckHelper(c.NUM_BITS).assertEquals(n),new c(n)}sub(e){let n=this.value.sub(c.from(e).value);return n.rangeCheckHelper(c.NUM_BITS).assertEquals(n),new c(n)}lte(e){let n=this.value.sub(e.value).seal(),o=n.rangeCheckHelper(c.NUM_BITS).equals(n),r=n.rangeCheckHelper(c.NUM_BITS).equals(n.neg());return o.or(r).assertEquals(!0),r}assertLte(e){let n=e.value.sub(this.value).seal();n.rangeCheckHelper(c.NUM_BITS).assertEquals(n)}lt(e){return this.lte(e).and(this.value.equals(e.value).not())}assertLt(e){this.lt(e).assertEquals(!0)}gt(e){return e.lt(this)}assertGt(e){e.assertLt(this)}};c.NUM_BITS=64;(0,j.__decorate)([B,(0,j.__metadata)("design:type",u)],c.prototype,"value",void 0);var y=class extends P{constructor(e){super();this.value=e}static get zero(){return new y(u.zero)}static get one(){return new y(u.one)}toString(){return this.value.toString()}toUInt64(){return new c(this.value)}static check(e){e.value.rangeCheckHelper(32).assertEquals(e.value)}static checkConstant(e){if(!e.isConstant())return e;let n=e.toBigInt();if(n<0n||n>=1n<<BigInt(this.NUM_BITS))throw Error(`UInt32: Expected number between 0 and 2^32 - 1, got ${n}`);return e}static from(e){return e instanceof y&&(e=e.value),new this(this.checkConstant(u(e)))}static fromNumber(e){return this.from(e)}static fromString(e){return this.from(e)}static fromBigInt(e){return this.from(e)}static MAXINT(){return new y(u((1n<<32n)-1n))}divMod(e){let n=this.value,o=y.from(e).value;if(n.isConstant()&&o.isConstant()){let s=n.toBigInt(),d=o.toBigInt(),p=s/d,m=s-p*d;return{quotient:new y(new u(p.toString())),rest:new y(new u(m.toString()))}}o=o.seal();let r=g.witness(u,()=>new u(n.toBigInt()/o.toBigInt()));r.rangeCheckHelper(y.NUM_BITS).assertEquals(r);let i=n.sub(r.mul(o)).seal();i.rangeCheckHelper(y.NUM_BITS).assertEquals(i);let l=new y(i),a=new y(r);return l.assertLt(new y(o)),{quotient:a,rest:l}}div(e){return this.divMod(e).quotient}mod(e){return this.divMod(e).rest}mul(e){let n=this.value.mul(y.from(e).value);return n.rangeCheckHelper(y.NUM_BITS).assertEquals(n),new y(n)}add(e){let n=this.value.add(y.from(e).value);return n.rangeCheckHelper(y.NUM_BITS).assertEquals(n),new y(n)}sub(e){let n=this.value.sub(y.from(e).value);return n.rangeCheckHelper(y.NUM_BITS).assertEquals(n),new y(n)}lte(e){let n=this.value.sub(e.value).seal(),o=n.rangeCheckHelper(y.NUM_BITS).equals(n),r=n.rangeCheckHelper(y.NUM_BITS).equals(n.neg());return o.or(r).assertEquals(!0),r}assertLte(e){let n=e.value.sub(this.value).seal();n.rangeCheckHelper(y.NUM_BITS).assertEquals(n)}lt(e){return this.lte(e).and(this.value.equals(e.value).not())}assertLt(e){this.lt(e).assertEquals(!0)}gt(e){return e.lt(this)}assertGt(e){e.assertLt(this)}};y.NUM_BITS=32;(0,j.__decorate)([B,(0,j.__metadata)("design:type",u)],y.prototype,"value",void 0);var f=class extends P{constructor(e,n=u.one){super();this.magnitude=e,this.sgn=n}static fromFieldUnchecked(e){let n=1n<<64n,o=e.toBigInt(),r=o<n,i=u.ORDER-o<n;if(!r&&!i)throw Error(`Int64: Expected a value between (-2^64, 2^64), got ${e}`);let l=u(r?e.toString():e.neg().toString()),a=r?u.one:u.minusOne;return new f(new c(l),a)}static fromUnsigned(e){return new f(e instanceof y?e.toUInt64():e)}static from(e){return e instanceof f?e:e instanceof c||e instanceof y?f.fromUnsigned(e):f.fromFieldUnchecked(u(e))}static fromNumber(e){return f.fromFieldUnchecked(u(e))}static fromString(e){return f.fromFieldUnchecked(u(e))}static fromBigInt(e){return f.fromFieldUnchecked(u(e))}toString(){let e=this.magnitude.toString();return(this.sgn.equals(u.one).toBoolean()||e==="0"?"":"-")+e}isConstant(){return this.magnitude.value.isConstant()&&this.sgn.isConstant()}static check(e){c.check(e.magnitude),e.sgn.square().assertEquals(u.one)}static get zero(){return new f(c.zero)}static get one(){return new f(c.one)}static get minusOne(){return new f(c.one).neg()}toField(){return this.magnitude.value.mul(this.sgn)}static fromField(e){if(e.isConstant())return f.fromFieldUnchecked(e);let n=g.witness(f,()=>f.fromFieldUnchecked(e));return n.toField().assertEquals(e),n}neg(){return new f(this.magnitude,this.sgn.neg())}add(e){let n=f.from(e);return f.fromField(this.toField().add(n.toField()))}sub(e){let n=f.from(e);return f.fromField(this.toField().sub(n.toField()))}mul(e){let n=f.from(e);return f.fromField(this.toField().mul(n.toField()))}div(e){let n=f.from(e),{quotient:o}=this.magnitude.divMod(n.magnitude),r=this.sgn.mul(n.sgn);return new f(o,r)}mod(e){let n=c.from(e),o=this.magnitude.divMod(n).rest.value;return o=g.if(this.isPositive(),o,n.value.sub(o)),new f(new c(o))}equals(e){let n=f.from(e);return this.toField().equals(n.toField())}assertEquals(e){let n=f.from(e);this.toField().assertEquals(n.toField())}isPositive(){return this.sgn.equals(u.one)}};(0,j.__decorate)([B,(0,j.__metadata)("design:type",c)],f.prototype,"magnitude",void 0);(0,j.__decorate)([B,(0,j.__metadata)("design:type",u)],f.prototype,"sgn",void 0);var gt={};pe(gt,{BerkeleyQANet:()=>ao,LocalBlockchain:()=>io,accountCreationFee:()=>he,createTransaction:()=>se,createUnsignedTransaction:()=>ht,currentSlot:()=>co,currentTransaction:()=>h,getAccount:()=>z,getBalance:()=>po,getNetworkState:()=>nt,nextTransactionId:()=>ae,sendTransaction:()=>en,setActiveInstance:()=>so,setCurrentTransaction:()=>ro,transaction:()=>uo});var T;function Ut({witnesses:t=void 0,expectedAccesses:e=void 0,actualAccesses:n=0,self:o,...r},i){T={witnesses:t,expectedAccesses:e,actualAccesses:n,self:o,...r};let l;try{l=i()}finally{T=void 0}return[o,l]}async function Mt({witnesses:t=void 0,expectedAccesses:e=1,actualAccesses:n=0,self:o,...r},i){T={witnesses:t,expectedAccesses:e,actualAccesses:n,self:o,...r};let l;try{if(l=await i(),T.actualAccesses!==T.expectedAccesses)throw Error(Ze)}finally{T=void 0}return[o,l]}var Ze="It seems you're running multiple provers concurrently within the same JavaScript thread, which, at the moment, is not supported and would lead to bugs.";function Lt(){if(T===void 0||(T.actualAccesses++,T.expectedAccesses!==void 0&&T.actualAccesses>T.expectedAccesses))throw Error(Ze);return T}function be(){return!!T?.inProver}function we(){return!!T?.inCompile}function _t(t,e){return Rn(t,e),{account:Jn(t),network:Dn(t)}}function Dn(t){let e=O.Party.layout[0].value.layout[9].value.layout[0].value,n=Ye(t);return Qe(e,"network",t,n)}function Jn(t){let e=O.Party.layout[0].value.layout[9].value.layout[1].value,n=Ye(t);return Qe(e,"account",t,n)}var $n=["account.receiptChainHash","network.snarkedLedgerHash","network.nextEpochData.ledger.hash","network.nextEpochData.seed","network.nextEpochData.startCheckpoint","network.nextEpochData.lockCheckpoint","network.stakingEpochData.ledger.hash","network.stakingEpochData.seed","network.stakingEpochData.startCheckpoint","network.stakingEpochData.lockCheckpoint","account.provedState","account.delegate","network.timestamp"];function Qe(t,e,n,o){if(t.type==="option"){if(t.optionType==="implicit"&&t.inner.type==="object"){let r=t.inner.layout[0].value.type,i=tt[r];return{...Xe(n,e,i,o),assertBetween(l,a){o.constrained.add(e);let s=oe(n.body.preconditions,e);s.lower=l,s.upper=a}}}else if(t.optionType==="flaggedOption"){let r=tt[t.inner.type];return Xe(n,e,r,o)}else if(t.inner.type!=="object"){let r=tt[t.inner.type];return Xe(n,e,r,o)}}else{if(t.type==="array")return{};if(t.type==="object")return Object.fromEntries(t.layout.map(({key:r,value:i})=>[r,Qe(i,`${e}.${r}`,n,o)]));throw Error("bug")}}function Xe(t,e,n,o){return{get(){if($n.includes(e)){let l=o.isSelf?"this":"party";throw Error(`${l}.${e}.get() is not implemented yet.`)}let{read:r,vars:i}=o;return r.add(e),i[e]??(i[e]=Hn(t,e,n))},assertEquals(r){o.constrained.add(e);let i=oe(t.body.preconditions,e);"isSome"in i?(i.isSome=b(!0),i.value=r):"lower"in i?(i.lower=r,i.upper=r):Vn(t.body.preconditions,e,r)},assertNothing(){o.constrained.add(e)}}}function Hn(t,e,n){if(we())return g.witness(n,()=>{throw Error(`This error is thrown because you are reading out the value of a variable, when that value is not known.
To write a correct circuit, you must avoid any dependency on the concrete value of variables.`)});let[o,...r]=e.split("."),i=r.join("."),l;if(o==="account"){let a=t.body.publicKey;if(l=z(a)[i],l===void 0)throw Error(`Could not get \`${i}\` on account with public key ${a.toBase58()}. The property may not be available on this account.`)}else if(o==="network"){let a=nt();l=oe(a,i)}else throw Error("impossible");return be()?g.witness(n,()=>l):l}function Rn(t,e){et.set(t,{read:new Set,constrained:new Set,vars:{},isSelf:e})}function Dt(t){let e=et.get(t);e!==void 0&&(e.vars={})}function Se(t){let e=Ye(t),n=e.isSelf?"this":"party",o=Fe.ignoreAll();for(let r of e.read){if(e.constrained.has(r))continue;let i=oe(t.body.preconditions,r),l=oe(o,r);if(!Y(i,l))continue;let a=Kn(i),s=r.split(".").pop(),d=`You used \`${n}.${r}.get()\` without adding a precondition that links it to the actual ${s}.
Consider adding this line to your code:
${n}.${r}.assertEquals(${n}.${r}.get());${a?`
You can also add more flexible preconditions with \`${n}.${r}.assertBetween(...)\`.`:""}`;throw Error(d)}}function Ye(t){let e=et.get(t);if(e===void 0)throw Error("bug: precondition context not found");return e}var et=new WeakMap,tt={UInt64:c,UInt32:y,Field:u,Bool:b};function Kn(t){return"lower"in t}function oe(t,e){let n=e.split(".").reverse();for(;n.length>0;){let o=n.pop();t=t[o]}return t}function Vn(t,e,n){let o=e.split("."),r=o.pop();oe(t,o.join("."))[r]=n}var ee=8;function H(t){return{isSome:b(!1),value:t}}var te=()=>b(!0),R=()=>b(!1),k={impossible:()=>({constant:te(),signatureNecessary:te(),signatureSufficient:R()}),none:()=>({constant:te(),signatureNecessary:R(),signatureSufficient:te()}),proof:()=>({constant:R(),signatureNecessary:R(),signatureSufficient:R()}),signature:()=>({constant:R(),signatureNecessary:te(),signatureSufficient:te()}),proofOrSignature:()=>({constant:R(),signatureNecessary:R(),signatureSufficient:te()})},re={...k,default:()=>({editState:k.proof(),send:k.signature(),receive:k.proof(),setDelegate:k.signature(),setPermissions:k.signature(),setVerificationKey:k.signature(),setZkappUri:k.signature(),editSequenceState:k.proof(),setTokenSymbol:k.signature(),incrementNonce:re.signature(),setVotingFor:k.signature()}),initial:()=>({editState:k.signature(),send:k.signature(),receive:k.none(),setDelegate:k.signature(),setPermissions:k.signature(),setVerificationKey:k.signature(),setZkappUri:k.signature(),editSequenceState:k.signature(),setTokenSymbol:k.signature(),incrementNonce:re.signature(),setVotingFor:k.signature()})},Jt=()=>u.one,K=class{constructor(e,n){this.hash=e,this.data=n}static empty(){let e=u("23641812384071365026036270005604392899711718400522999453895455265440046333209");return new K(e,[])}static emptySequenceState(){return u("19777675955122618431670853529822242067051263606115426372178827525373304476695")}},L={noUpdate(){return{appState:Array(ee).fill(0).map(()=>H(u.zero)),delegate:H(S.empty()),verificationKey:H({data:"",hash:u.zero}),permissions:H(re.initial()),zkappUri:H({data:"",hash:u("22930868938364086394602058221028773520482901241511717002947639863679740444066")}),tokenSymbol:H({data:"",hash:u.zero}),timing:H({cliffAmount:c.zero,cliffTime:y.zero,initialMinimumBalance:c.zero,vestingIncrement:c.zero,vestingPeriod:y.zero}),votingFor:H(u.zero)}},keepAll(t){return{publicKey:t,update:L.noUpdate(),tokenId:Jt(),balanceChange:f.zero,events:K.empty(),sequenceEvents:K.empty(),caller:Jt(),callData:u.zero,callDepth:0,preconditions:Fe.ignoreAll(),useFullCommitment:b(!1),incrementNonce:b(!1)}},dummy(){return L.keepAll(S.empty())}},$t={keepAll(t,e){return{publicKey:t,nonce:e,fee:c.zero,update:L.noUpdate(),events:K.empty(),sequenceEvents:K.empty(),networkPrecondition:Ht.ignoreAll()}}},Ht={ignoreAll(){let t={ledger:{hash:_(u.zero),totalCurrency:Te()},seed:_(u.zero),startCheckpoint:_(u.zero),lockCheckpoint:_(u.zero),epochLength:ie()},e=A(t);return{snarkedLedgerHash:_(u.zero),timestamp:Te(),blockchainLength:ie(),minWindowDensity:ie(),totalCurrency:Te(),globalSlotSinceHardFork:ie(),globalSlotSinceGenesis:ie(),stakingEpochData:t,nextEpochData:e}}};function _(t){return{isSome:b(!1),value:t}}var ie=()=>({lower:y.fromNumber(0),upper:y.MAXINT()}),Te=()=>({lower:c.fromNumber(0),upper:c.MAXINT()}),Rt={ignoreAll(){let t=[];for(let e=0;e<ee;++e)t.push(_(u.zero));return{balance:Te(),nonce:ie(),receiptChainHash:_(u.zero),delegate:_(S.empty()),state:t,sequenceState:K.emptySequenceState(),provedState:_(b(!1))}},nonce(t){let e=Rt.ignoreAll();return v.assertEquals(e.nonce,t),e}},Fe={ignoreAll(){return{account:Rt.ignoreAll(),network:Ht.ignoreAll()}}},v=class{constructor(e,n={},o=!1){this.body=e,this.authorization=n;let{account:r,network:i}=_t(this,o);this.account=r,this.network=i,this.isSelf=o}static clone(e){let n=A(e.body),o=A(e.authorization);return new v(n,o,e.isSelf)}get balance(){let e=this;return{addInPlace(n){e.body.balanceChange=e.body.balanceChange.add(n)},subInPlace(n){e.body.balanceChange=e.body.balanceChange.sub(n)}}}get update(){return this.body.update}static setValue(e,n){e.isSome=b(!0),e.value=n}static assertBetween(e,n,o){e.lower=n,e.upper=o}static assertEquals(e,n){if("isSome"in e)e.isSome=b(!0),e.value=n;else if("lower"in e)e.lower=n,e.upper=n;else throw Error("assertEquals: Invalid argument")}get publicKey(){return this.body.publicKey}signInPlace(e,n=!1){this.setNoncePrecondition(n),this.body.incrementNonce=b(!0),this.authorization={kind:"lazy-signature",privateKey:e}}sign(e){let n=v.clone(this);return n.signInPlace(e),n}static signFeePayerInPlace(e,n,o=!1){e.body.nonce=this.getNonce(e,o),e.authorization={kind:"lazy-signature",privateKey:n}}static getNonce(e,n=!1){let o;try{let r=g.inProver();if(r||!g.inCheckedComputation()){let i=z(e.body.publicKey);o=r?g.witness(y,()=>i.nonce):i.nonce}else o=g.witness(y,()=>{throw Error("this should never happen")})}catch(r){if(n)o=y.zero;else throw r}return o}setNoncePrecondition(e=!1){let n=v.getNonce(this,e),o=this.body.preconditions.account;return v.assertEquals(o.nonce,n),n}toFields(){return Q.Party.toFields(Ce(this))}hash(){let e=Q.Party.toFields(Ce(this));return w.hashPartyFromFields(e)}static defaultParty(e){let n=L.keepAll(e);return new v(n)}static defaultFeePayer(e,n,o){return{body:$t.keepAll(e,o),authorization:{kind:"lazy-signature",privateKey:n}}}static dummyFeePayer(){return{body:$t.keepAll(S.empty(),y.zero),authorization:void 0}}static createUnsigned(e){let n=e,o=L.keepAll(n);if(h===void 0)throw new Error("Party.createUnsigned: Cannot run outside of a transaction");let r=new v(o);return h.nextPartyIndex++,h.parties.push(r),r}static createSigned(e,n){let{nonce:o,isSameAsFeePayer:r}=n??{},i=r!==void 0?b(r):h?.sender?.equals(e)??b(!1),l=e.toPublicKey(),a=L.keepAll(l);if(o===void 0&&(o=z(l).nonce),h===void 0)throw new Error("Party.createSigned: Cannot run outside of a transaction");let s=g.if(i,new y(u.one),y.zero);for(let p of h.parties){let m=p.publicKey.equals(l).and(p.body.incrementNonce);s.add(new y(m.toField()))}o=o.add(s),v.assertEquals(a.preconditions.account.nonce,o),a.incrementNonce=b(!0);let d=new v(a);return d.authorization={kind:"lazy-signature",privateKey:e},h.nextPartyIndex++,h.parties.push(d),d}static fundNewAccount(e,{initialBalance:n=c.zero,isSameAsFeePayer:o=void 0}={}){let r=v.createSigned(e,{isSameAsFeePayer:o}),i=n instanceof c?n:c.fromString(`${n}`);r.balance.subInPlace(i.add(he()))}},Kt="7mWxjLYgbJUkZNcGouvhVj5tJ8yu9hoexb9ntvPK8t5LHqzmrL6QJjjKtf5SgmxB4QWkDw7qoMMbbNGtHVpsbJHPyTy2EzRQ";function Gn(t){let{body:e,authorization:n}=t;return typeof n=="string"?{body:e,authorization:n}:{body:e,authorization:Kt}}function Ce({body:t,authorization:e}){return{body:t,authorization:"kind"in e?{}:e}}function Vt({feePayer:t,otherParties:e,memo:n}){return{feePayer:Gn(t),otherParties:e.map(Ce),memo:w.memoToBase58(n)}}function le(t){return Q.Parties.toJson(Vt(t))}function ot(t,e=[]){let n=e.map(p=>p.toPublicKey()),{commitment:o,fullCommitment:r}=w.transactionCommitments(JSON.stringify(le(t)));function i(p){let{body:m,authorization:C}=A(p);if(typeof C=="string")return{body:m,authorization:C};if(C===void 0)return{body:m,authorization:Kt};let{privateKey:x}=C;if(x===void 0){let G=n.findIndex(ce=>ce===p.body.publicKey);if(G===-1){let ce=S.toBase58(p.body.publicKey);throw Error(`addMissingSignatures: Cannot add signature for fee payer (${ce}), private key is missing.`)}x=e[G]}let J=w.signFieldElement(r,x);return{body:m,authorization:J}}function l(p){if(p=v.clone(p),!("kind"in p.authorization)||p.authorization.kind!=="lazy-signature")return p;let{privateKey:m}=p.authorization;if(m===void 0){let J=n.findIndex(G=>G.equals(p.body.publicKey));if(J===-1)throw Error(`addMissingSignatures: Cannot add signature for ${p.publicKey.toBase58()}, private key is missing.`);m=e[J]}let C=p.body.useFullCommitment.toBoolean()?r:o,x=w.signFieldElement(C,m);return p.authorization={signature:x},p}let{feePayer:a,otherParties:s,memo:d}=t;return{feePayer:i(a),otherParties:s.map(p=>l(p)),memo:d}}async function rt(t){let e=JSON.stringify(le(t));async function n(a,s){if(a=v.clone(a),!("kind"in a.authorization)||a.authorization.kind!=="lazy-proof")return a;let{method:d,args:p,ZkappClass:m}=a.authorization,C=w.zkappPublicInput(e,s);if(m._provers===void 0)throw Error(`Cannot prove execution of ${d.name}(), no prover found. Try calling \`await ${m.name}.compile()\` first, this will cache provers in the background.`);let x=m._provers,J=`Error when computing proofs: Method ${d.name} not found. Make sure your environment supports decorators, and annotate with \`@method ${d.name}\`.`;if(m._methods===void 0)throw Error(J);let G=m._methods.findIndex(vn=>vn.methodName===d.name);if(G===-1)throw Error(J);let[,ce]=await Mt({self:v.defaultParty(a.body.publicKey),witnesses:p,inProver:!0},()=>x[G](C,[]));return a.authorization={proof:fe.proofToString(ce)},a}let{feePayer:o,otherParties:r,memo:i}=t,l=[];for(let a=0;a<r.length;a++){let s=await n(r[a],a);l.push(s)}return{feePayer:o,otherParties:l,memo:i}}function it(t,e){typeof e=="string"&&(e=F.fromBase58(e));let n=e.toPublicKey().toBase58(),o=JSON.parse(t);o.feePayer.body.publicKey===n&&(o=JSON.parse(w.signFeePayer(JSON.stringify(o),e)));for(let i=0;i<o.otherParties.length;i++){let l=o.otherParties[i];l.body.publicKey===n&&l.authorization.proof===null&&(o=JSON.parse(w.signOtherParty(JSON.stringify(o),e,i)))}return JSON.stringify(o)}var qr=de(require("isomorphic-fetch"));var q="none";function Pe(t){q=t}async function Ae(t,e=q,{timeout:n=lt}={}){let o=t instanceof S?t.toBase58():t,r=await Gt(o,e,{timeout:n});return r.error===void 0?{account:Ee(r.account),error:void 0}:{account:void 0,error:r.error}}async function Gt(t,e=q,n){let[o,r]=await ft(Zn(t),e,n);if(r!==void 0)return{account:void 0,error:r};let i=o.data.account;return i===null?{account:void 0,error:{statusCode:404,statusText:`fetchAccount: Account with public key ${t} does not exist.`}}:(Xt(i,e),{account:i,error:void 0})}var lt=3e4;function Wn(t){switch(t){case"None":return k.none();case"Proof":return k.proof();case"Signature":return k.signature();case"Either":return k.proofOrSignature();case"Impossible":return k.impossible();default:throw Error("unexpected permission")}}var Zn=t=>`{
  account(publicKey: "${t}") {
    publicKey
    nonce
    zkappUri
    zkappState
    permissions {
      editState
      send
      receive
      setDelegate
      setPermissions
      setVerificationKey
      setZkappUri
      editSequenceState
      setTokenSymbol
      incrementNonce
      setVotingFor
    }
    receiptChainHash
    balance { total }
    delegateAccount { publicKey }
    sequenceEvents
  }
}
`;function Ee({publicKey:t,nonce:e,zkappState:n,balance:o,permissions:r,delegateAccount:i,receiptChainHash:l,sequenceEvents:a}){return{publicKey:t!==void 0?S.fromBase58(t):void 0,nonce:e!==void 0?y.fromString(e):void 0,balance:o&&c.fromString(o.total),zkapp:(n&&{appState:n.map(u)})??void 0,permissions:r&&Object.fromEntries(Object.entries(r).map(([s,d])=>[s,Wn(d)])),sequenceState:a!=null?u(a[0]):void 0,delegate:i&&S.fromBase58(i.publicKey)}}function Qn(t){let{publicKey:e,nonce:n,balance:o,zkapp:r}=t;return{publicKey:e instanceof S?e.toBase58():e,nonce:n?.toString(),zkappState:r?.appState.map(i=>i.toString())??Array(ee).fill("0"),balance:{total:o?.toString()??"0"}}}var at={},st={},ut={},ct={},Xn=10*60*1e3;function pt(t,e){let n=t.toBase58();ut[`${n};${e}`]={publicKey:n,graphqlEndpoint:e}}function Wt(t){ct[t]={graphqlEndpoint:t}}async function Zt(t){let e=Date.now()-Xn,o=Object.entries(ut).filter(([i,l])=>{if(l.graphqlEndpoint!==t)return!1;let a=at[i];return a===void 0||a.timestamp<e}).map(async([i,{publicKey:l}])=>{(await Gt(l,t)).error===void 0&&delete ut[i]}),r=Object.entries(ct).find(([i,l])=>{if(l.graphqlEndpoint!==t)return;let a=st[i];return a===void 0||a.timestamp<e});r!==void 0&&o.push((async()=>{try{await yt(t),delete ct[r[0]]}catch{}})()),await Promise.all(o)}function Ie(t,e=q){let n=at[`${t.toBase58()};${e}`]?.account;if(n!==void 0)return Ee(n)}function dt(t=q){return st[t]?.network}function Qt(t,e=q){Xt(Qn(t),e)}function Xt(t,e){at[`${t.publicKey};${e}`]={account:t,graphqlEndpoint:e,timestamp:Date.now()}}async function yt(t=q){let[e,n]=await ft(Yn,t);if(n)throw Error(n.statusText);let o=e?.data?.bestChain?.[0];if(o===void 0)throw Error("Failed to fetch latest network state.");let r=eo(o);return st[t]={network:r,graphqlEndpoint:t,timestamp:Date.now()},r}var Yn=`{
  bestChain(maxLength: 1) {
    protocolState {
      blockchainState {
        snarkedLedgerHash
        stagedLedgerHash
        date
        utcDate
        stagedLedgerProofEmitted
      }
      previousStateHash
      consensusState {
        blockHeight
        slotSinceGenesis
        slot
        nextEpochData {
          ledger {hash totalCurrency}
          seed
          startCheckpoint
          lockCheckpoint
          epochLength
        }
        stakingEpochData {
          ledger {hash totalCurrency}
          seed
          startCheckpoint
          lockCheckpoint
          epochLength
        }
        epochCount
        minWindowDensity
        totalCurrency
        epoch
      }
    }
  }
}`;function eo({protocolState:{blockchainState:{snarkedLedgerHash:t,utcDate:e},consensusState:{blockHeight:n,minWindowDensity:o,totalCurrency:r,slot:i,slotSinceGenesis:l,nextEpochData:a,stakingEpochData:s}}}){return{snarkedLedgerHash:u.zero,timestamp:c.fromString(e),blockchainLength:y.fromString(n),minWindowDensity:y.fromString(o),totalCurrency:c.fromString(r),globalSlotSinceHardFork:y.fromString(i),globalSlotSinceGenesis:y.fromString(l),nextEpochData:Yt(a),stakingEpochData:Yt(s)}}function Yt({ledger:{hash:t,totalCurrency:e},seed:n,startCheckpoint:o,lockCheckpoint:r,epochLength:i}){return{ledger:{hash:u.zero,totalCurrency:c.fromString(e)},seed:u.zero,startCheckpoint:u.zero,lockCheckpoint:u.zero,epochLength:y.fromString(i)}}function Be(t,e=q,{timeout:n=lt}={}){return ft(me(t),e,{timeout:n})}function me(t){return`mutation {
  sendZkapp(input: {
    parties: ${to(t)}
  }) {
    zkapp {
      parties {
        memo
      }
    }
  }
}
`}function to(t){return JSON.stringify(JSON.parse(t),null,2).replace(/^[\t ]*"[^:\n\r]+(?<!\\)":/gm,n=>n.replace(/"/g,""))}async function ft(t,e=q,{timeout:n=lt}={}){if(e==="none")throw Error("Should have made a graphql request, but don't know to which endpoint. Try calling `setGraphqlEndpoint` first.");let o=new AbortController,r=setTimeout(()=>{o.abort()},n);try{let i=JSON.stringify({operationName:null,query:t,variables:{}}),l=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:i,signal:o.signal});return await no(l)}catch(i){return clearTimeout(r),[void 0,oo(i)]}}async function no(t){return t.ok?[await t.json(),void 0]:[void 0,{statusCode:t.status,statusText:t.statusText}]}function oo(t){let e=JSON.stringify(t);return t instanceof AbortSignal?{statusCode:408,statusText:`Request Timeout: ${e}`}:{statusCode:500,statusText:`Unknown Error: ${e}`}}var ae={value:0},h;function ro(t){h=t}function ht(t,{fetchMode:e="cached"}={}){return se(void 0,t,{fetchMode:e})}function se(t,e,{fetchMode:n="cached"}={}){if(h!==void 0)throw new Error("Cannot start new transaction within another transaction");let o=t instanceof F?t:t?.feePayerKey,r=t instanceof F?void 0:t?.fee,i=t instanceof F?"":t?.memo??"";h={sender:o,parties:[],nextPartyIndex:0,fetchMode:n};try{g.runAndCheck(e);for(let d of h.parties)Se(d)}catch(d){throw ae.value+=1,h=void 0,d}let l;if(o!==void 0){let d=o.toPublicKey(),p=z(d);l=v.defaultFeePayer(d,o,p.nonce),r!==void 0&&(l.body.fee=r instanceof c?r:c.fromString(String(r)))}else l=v.dummyFeePayer();let a={otherParties:h.parties,feePayer:l,memo:i};ae.value+=1,h=void 0;let s={transaction:a,sign(d){return s.transaction=ot(s.transaction,d),s},async prove(){return s.transaction=await rt(s.transaction),s},toJSON(){let d=le(s.transaction);return JSON.stringify(d)},toGraphqlQuery(){return me(s.toJSON())},send(){return en(s)}};return s}var mt=1e9;function io({accountCreationFee:t=mt}={}){let e=3*60*1e3,n=new Date().valueOf(),o=w.create([]);function r(l,a){o.addAccount(l,a)}let i=[];for(let l=0;l<10;++l){let a="30000000000",s=F.random(),d=s.toPublicKey();r(d,a),i.push({privateKey:s,publicKey:d})}return{accountCreationFee:()=>c.from(t),currentSlot(){return y.fromNumber(Math.ceil((new Date().valueOf()-n)/e))},getAccount(l){let a=o.getAccount(l);if(a==null)throw new Error(`getAccount: Could not find account for public key ${l.toBase58()}`);return{publicKey:l,balance:new c(a.balance.value),nonce:new y(a.nonce.value),zkapp:a.zkapp}},getNetworkState(){return nn()},sendTransaction(l){return l.sign(),o.applyJsonTransaction(JSON.stringify(le(l.transaction)),String(t)),{wait:async()=>{}}},async transaction(l,a){return se(l,a)},applyJsonTransaction(l){return o.applyJsonTransaction(l,String(t))},addAccount:r,testAccounts:i}}function lo(t){let e=c.from(mt);return Pe(t),{accountCreationFee:()=>e,currentSlot(){throw Error("currentSlot() is not implemented yet for remote blockchains.")},getAccount(n){if(h?.fetchMode==="test")return pt(n,t),Ie(n,t)??tn(n);if(h==null||h.fetchMode==="cached"){let o=Ie(n,t);if(o!==void 0)return o}throw Error(`getAccount: Could not find account for public key ${n.toBase58()}.
Graphql endpoint: ${t}`)},getNetworkState(){if(h?.fetchMode==="test")return Wt(t),dt(t)??nn();if(h==null||h.fetchMode==="cached"){let n=dt(t);if(n!==void 0)return n}throw Error(`getNetworkState: Could not fetch network state from graphql endpoint ${t}`)},sendTransaction(n){n.sign();let o=Be(n.toJSON());return{async wait(){let[r,i]=await o;i===void 0?r.data===null&&r.errors?.length>0?console.log("got graphql errors",r.errors):(console.log("got graphql response",r),console.log("Info: waiting for inclusion in a block is not implemented yet.")):console.log("got fetch error",i)}}},async transaction(n,o){return se(n,o,{fetchMode:"test"}),await Zt(t),se(n,o,{fetchMode:"cached"})}}}function ao(t){return lo(t)}var V={accountCreationFee:()=>c.from(mt),currentSlot:()=>{throw new Error("must call Mina.setActiveInstance first")},getAccount:t=>{if(h?.fetchMode==="test")return pt(t,q),tn(t);if(h===void 0||h?.fetchMode==="cached"){let e=Ie(t,q);if(e===void 0)throw Error(`getAccount: Could not find account for public key ${t.toBase58()}. Either call Mina.setActiveInstance first or explicitly add the account with addCachedAccount`);return e}throw new Error("must call Mina.setActiveInstance first")},getNetworkState(){throw new Error("must call Mina.setActiveInstance first")},sendTransaction(){throw new Error("must call Mina.setActiveInstance first")},async transaction(t,e){return se(t,e)}};function so(t){V=t}function uo(t,e){let n,o;return e!==void 0?(n=t,o=e):(n=void 0,o=t),V.transaction(n,o)}function co(){return V.currentSlot()}function z(t){return V.getAccount(t)}function nt(){return V.getNetworkState()}function po(t){return V.getAccount(t).balance}function he(){return V.accountCreationFee()}function en(t){return V.sendTransaction(t)}function tn(t){return{balance:c.zero,nonce:y.zero,publicKey:t??S.empty(),zkapp:{appState:Array(ee).fill(u.zero)}}}function nn(){let t={ledger:{hash:u.zero,totalCurrency:c.zero},seed:u.zero,startCheckpoint:u.zero,lockCheckpoint:u.zero,epochLength:y.zero};return{snarkedLedgerHash:u.zero,timestamp:c.zero,blockchainLength:y.zero,minWindowDensity:y.zero,totalCurrency:c.zero,globalSlotSinceHardFork:y.zero,globalSlotSinceGenesis:y.zero,stakingEpochData:t,nextEpochData:A(t)}}var yo=new Set(["_methods","_"]);function on(t,e,n){let o=t.constructor;if(yo.has(e))throw Error(`Property name ${e} is reserved.`);if(typeof t[e]!="function")throw Error(`@method decorator was applied to \`${e}\`, which is not a function.`);let r=Reflect.getMetadata("design:paramtypes",t,e),i=[],l=[],a=[];for(let p=0;p<r.length;p++){let m=r[p];if(mo(m))a.push({type:"proof",index:l.length}),l.push(m);else if(ho(m))a.push({type:"witness",index:i.length}),i.push(m);else throw Error(`Argument ${p} of method ${e} is not a valid circuit value.`)}o._methods??(o._methods=[]),o._methods.push({methodName:e,witnessArgs:i,proofArgs:l,args:a});let s=a.length,d=n.value;n.value=fo(d,s,o)}function fo(t,e,n){function o(...r){let i=r.slice(0,e),l=r[e];if(h===void 0||l===!0)return t.apply(this,i);{let a=this.self.authorization;return"kind"in a||"proof"in a||"signature"in a||(this.self.authorization={kind:"lazy-proof",method:t,args:i,ZkappClass:n}),t.apply(this,i)}}return o}function ho(t){return!!t&&["toFields","ofFields","sizeInFields"].every(e=>e in t)}function mo(t){return!1}function go(t,e,n){function o(r,i){let{self:l,witnesses:a}=Lt();a=n.map(a?(d,p)=>g.witness(d,()=>a[p]):ko),e(...a);let s=u.zero;return r[0].assertEquals(r[0]),Se(l),Dt(l),[]}return{identifier:t,main:o,proofsToVerify:[]}}var rn=class{constructor(e){this.address=e}static async compile(e){e??(e=F.random().toPublicKey());let n=new this(e),o=(this._methods??[]).map(({methodName:s,witnessArgs:d})=>go(s,(...p)=>n[s](...p),d)),[,{getVerificationKeyArtifact:r,provers:i,verify:l}]=Ut({self:kt(e),inCompile:!0},()=>fe.compile(o,2)),a=r();return this._provers=i,this._verificationKey={data:a.data,hash:u(a.hash)},{verificationKey:a,provers:i,verify:l}}deploy({verificationKey:e,zkappKey:n}){if(e??(e=this.constructor._verificationKey),e!==void 0){let{hash:o,data:r}=e,i=typeof o=="string"?u(o):o;this.setValue(this.self.update.verificationKey,{hash:i,data:r})}this.setValue(this.self.update.permissions,re.default()),this.sign(n,!0)}sign(e,n){this.self.signInPlace(e,n)}executionState(){if(T!==void 0)return{transactionId:0,partyIndex:0,party:T.self};if(h===void 0)return{transactionId:NaN,partyIndex:NaN,party:kt(this.address)};let e=this._executionState;if(e!==void 0&&e.transactionId===ae.value)return e;let n=ae.value,o=h.nextPartyIndex++,r=kt(this.address);return h.parties.push(r),e={transactionId:n,partyIndex:o,party:r},this._executionState=e,e}get self(){return this.executionState().party}get account(){return this.self.account}get network(){return this.self.network}get balance(){return this.self.balance}get nonce(){return this.self.setNoncePrecondition()}setValue(e,n){v.setValue(e,n)}setPermissions(e){this.setValue(this.self.update.permissions,e)}};function kt(t){let e=L.keepAll(t);return new v(e,{},!0)}function ko(t){return g.witness(t,()=>t.ofFields(Array(t.sizeInFields()).fill(u.zero)))}async function vo(t,{zkappKey:e,verificationKey:n,initialBalance:o,shouldSignFeePayer:r,feePayerKey:i,transactionFee:l,feePayerNonce:a,memo:s}){let d=e.toPublicKey(),p=ht(()=>{if(o!==void 0){if(i===void 0)throw Error("When using the optional initialBalance argument, you need to also supply the fee payer's private key feePayerKey to sign the initial balance funding.");let C=c.fromString(String(o)).add(he()),x=a!==void 0?y.fromString(String(a)):void 0;v.createSigned(i,{isSameAsFeePayer:!0,nonce:x}).balance.subInPlace(C)}let m=new t(d);if(m.deploy({verificationKey:n,zkappKey:e}),o!==void 0){let C=c.fromString(String(o));m.self.balance.addInPlace(C)}});if(p.transaction.memo=s??"",r){if(i===void 0||l===void 0)throw Error("When setting shouldSignFeePayer=true, you need to also supply feePayerKey (fee payer's private key) and transactionFee.");p.transaction=bo(p.transaction,i,{transactionFee:l})}return p.sign().toJSON()}function bo({feePayer:t,otherParties:e,memo:n},o,{transactionFee:r=0,feePayerNonce:i=void 0,memo:l=void 0}){t=A(t),typeof o=="string"&&(o=F.fromBase58(o));let a=o.toPublicKey();i===void 0&&(i=z(a).nonce.toString());let s=n;return l&&(s=w.memoToBase58(l)),t.body.nonce=y.fromString(`${i}`),t.body.publicKey=a,t.body.fee=c.fromString(`${r}`),v.signFeePayerInPlace(t,o),{feePayer:t,otherParties:e,memo:s}}function wo(t,e,{transactionFee:n=0,feePayerNonce:o=void 0,memo:r=void 0}){let i=JSON.parse(t);typeof e=="string"&&(e=F.fromBase58(e));let l=e.toPublicKey();return o===void 0&&(o=z(l).nonce.toString()),r&&(i.memo=w.memoToBase58(r)),i.feePayer.body.nonce=`${o}`,i.feePayer.body.publicKey=w.publicKeyToString(l),i.feePayer.body.fee=`${n}`,it(JSON.stringify(i),e)}function So(t,e){for(let n in e){let o=e[n],r=t.prototype;Reflect.metadata("design:paramtypes",o)(r,n);let i=Object.getOwnPropertyDescriptor(r,n);on(t.prototype,n,i),Object.defineProperty(r,n,i)}}function ln(){return Fo()}function vt(t){return function(e,n,o){let r=e.constructor;if(Co.has(n))throw Error(`Property name ${n} is reserved.`);let i=bt.get(r);i===void 0&&(i={states:[],layout:void 0},bt.set(r,i)),i.states.push([n,t]),Object.defineProperty(e,n,{get(){return this._?.[n]},set(l){if(l._contract!==void 0)throw Error("A State should only be assigned once to a SmartContract");if(this._?.[n])throw Error("A @state should only be assigned once");l._contract={key:n,stateType:t,instance:this,class:r},(this._??(this._={}))[n]=l}})}}function an(t,e){for(let n in e){let o=e[n];vt(o)(t.prototype,n)}}function Fo(){return{_contract:void 0,set(t){if(this._contract===void 0)throw Error("set can only be called when the State is assigned to a SmartContract @state.");let e=ze(this._contract),n=this._contract.stateType.toFields(t),o=this._contract.instance.self;n.forEach((r,i)=>{v.setValue(o.body.update.appState[e.offset+i],r)})},assertEquals(t){if(this._contract===void 0)throw Error("assertEquals can only be called when the State is assigned to a SmartContract @state.");let e=ze(this._contract),n=this._contract.stateType.toFields(t),o=this._contract.instance.self;n.forEach((r,i)=>{v.assertEquals(o.body.preconditions.account.state[e.offset+i],r)})},get(){if(this._contract===void 0)throw Error("get can only be called when the State is assigned to a SmartContract @state.");let t=ze(this._contract),e=this._contract.instance.address,n,o=be();if(we())n=g.witness(X(u,t.length),()=>{throw Error("this should never happen")});else{let i;try{i=z(e)}catch(l){throw o?l:Error(`${this._contract.key}.get() failed, because the zkapp account was not found in the cache. Try calling \`await fetchAccount(zkappAddress)\` first.`)}if(i.zkapp===void 0)n=Array(t.length).fill(u.zero);else{n=[];for(let l=0;l<t.length;++l)n.push(i.zkapp.appState[t.offset+l])}n=o?g.witness(X(u,t.length),()=>n):n}let r=this._contract.stateType.ofFields(n);return this._contract.stateType.check?.(r),r},async fetch(){if(this._contract===void 0)throw Error("fetch can only be called when the State is assigned to a SmartContract @state.");if(h!==void 0)throw Error("fetch is not intended to be called inside a transaction block.");let t=ze(this._contract),e=this._contract.instance.address,{account:n}=await Ae(e);if(n===void 0)return;let o;if(n.zkapp===void 0)o=Array(t.length).fill(u.zero);else{o=[];for(let r=0;r<t.length;r++)o.push(n.zkapp.appState[t.offset+r])}return this._contract.stateType.ofFields(o)}}}function ze({key:t,class:e}){let o=To(e).get(t);if(o===void 0)throw new Error(`state ${t} not found`);return o}function To(t){let e=bt.get(t);if(e===void 0)throw Error("bug");if(e.layout===void 0){let n=new Map;e.layout=n;let o=0;e.states.forEach(([r,i])=>{let l=i.sizeInFields();n.set(r,{offset:o,length:l}),o+=l})}return e.layout}var bt=new WeakMap,Co=new Set(["_methods","_"]);var wt={};pe(wt,{decrypt:()=>Ao,encrypt:()=>Po});var sn=class{constructor(){this.sponge=E.spongeCreate()()}absorb(e){E.spongeAbsorb(this.sponge,e)}squeeze(){return E.spongeSqueeze(this.sponge)}};E.Sponge=sn;function Po(t,e){let n=g.inCheckedComputation()?g.witness(I,()=>I.random()):I.random(),o=M.generator.scale(n),r=e.g.scale(n),i=new E.Sponge;i.absorb(r.x);let l=[];for(let s=0;s<t.length;s++){let d=i.squeeze(),p=t[s].add(d);l.push(p),s%2==1&&i.absorb(l[s-1]),(s%2==1||s===t.length-1)&&i.absorb(l[s])}let a=i.squeeze();return l.push(a),{publicKey:o,cipherText:l}}function Ao({publicKey:t,cipherText:e},n){let o=t.scale(n.s),r=new E.Sponge;r.absorb(o.x);let i=e.pop(),l=[];for(let a=0;a<e.length;a++){let s=r.squeeze(),d=e[a].sub(s);l.push(d),a%2==1&&r.absorb(e[a-1]),(a%2==1||a===e.length-1)&&r.absorb(e[a])}return r.squeeze().assertEquals(i),l}var Tt={};pe(Tt,{Bijective:()=>Bo,bytesFromFields:()=>pn,bytesToFields:()=>cn,stringFromFields:()=>Io,stringToFields:()=>Eo});function Eo(t){let e=new TextEncoder().encode(t);return cn(e)}function Io(t){let e=pn(t);return new TextDecoder().decode(e)}var un=1;function cn(t){let e=[],n=0n,o=0n;for(let r of t)n+=BigInt(r)<<o,o+=8n,o===248n&&(e.push(u(n.toString())),n=0n,o=0n);return n+=BigInt(un)<<o,e.push(u(n.toString())),e}function pn(t){let e=t.pop();if(e===void 0)return new Uint8Array;let n=Ft(e),o=n.lastIndexOf(un,30);if(o===-1)throw Error("Error (bytesFromFields): Invalid encoding.");let r=new Uint8Array(t.length*31+o);r.set(n.subarray(0,o),t.length*31),o=0;for(let i of t)r.set(Ft(i).subarray(0,31),o),o+=31;return t.push(e),r}var qe=0x40000000000000000000000000000000224698fc094cf91b992d30ed00000001n,xe=0x40000000000000000000000000000000224698fc0994a8dd8c46eb2100000001n,St=32,dn=256n**BigInt(St),Bo={Fp:{toBytes:t=>Oe(t,qe),fromBytes:t=>Ne(t,qe),toString(t){return new TextDecoder().decode(Oe(t,qe))},fromString(t){let e=new TextEncoder().encode(t);return Ne(e,qe)}},Fq:{toBytes:t=>Oe(t,xe),fromBytes:t=>Ne(t,xe),toString(t){return new TextDecoder().decode(Oe(t,xe))},fromString(t){let e=new TextEncoder().encode(t);return Ne(e,xe)}}};function Oe(t,e){let n=t.map(xo),o=yn(n,e,dn);return jo(o,St)}function Ne(t,e){let n=No(t,St);return yn(n,dn,e).map(Oo)}function yn(t,e,n){let o=zo(t,e);return qo(o,n)}function zo(t,e){let n=[];for(let i=e,l=1;l<t.length;i**=2n,l*=2)n.push(i);let o=n.length;t=t.concat(Array(2**o-t.length).fill(0n));for(let i=0;i<o;i++){let l=Array(t.length>>1),a=n[i];for(let s=0;s<l.length;s++)l[s]=t[2*s]+a*t[2*s+1];t=l}console.assert(t.length===1);let[r]=t;return r}function qo(t,e){let n=[];for(let i=e;i<t;i**=2n)n.push(i);let o=[t],r=n.length;for(let i=0;i<r;i++){let l=Array(2*o.length),a=n[r-1-i];for(let s=0;s<o.length;s++){let d=o[s],p=d/a;l[2*s+1]=p,l[2*s]=d-p*a}o=l}for(;o[o.length-1]===0n;)o.pop();return o}function Ft(t){let e=t.value;if(e[0]!==0)throw Error("Field is not constant");return e[1]}function xo(t){let e=Ft(t);return fn(e)}function Oo(t){let e=u(1);return e.value=[0,hn(t,32)],e}function fn(t){let e=0n,n=0n;for(let o of t)e+=BigInt(o)<<n,n+=8n;return e}function hn(t,e){let n=[];for(;t>0;t>>=8n)n.push(Number(t&0xffn));let o=new Uint8Array(n);if(e===void 0)return o;if(o.length>e)throw Error(`bigint doesn't fit into ${e} bytes.`);let r=new Uint8Array(e);return r.set(o),r}function No(t,e){let n=[];for(let o=0;o<t.byteLength;o+=e)n.push(fn(t.subarray(o,o+e)));return n}function jo(t,e){let n=new Uint8Array(t.length*e),o=0;for(let i of t)n.set(hn(i,e),o),o+=e;let r=n.byteLength-1;for(;r>=0&&n[r]===0;r--);return n.slice(0,r+1)}var ue=de(require("tslib"));var mn=128,U=class extends P{constructor(e){super();this.value=e}isNull(){return this.equals(gn())}toField(){return this.value}toString(){let e=Number(this.value.toString());return String.fromCharCode(e)}static fromString(e){let n=u(e.charCodeAt(0));return new U(n)}static check(e){e.value.rangeCheckHelper(16).assertEquals(e.value)}};(0,ue.__decorate)([B,(0,ue.__metadata)("design:type",u)],U.prototype,"value",void 0);var D=class extends P{constructor(e){super();this.values=kn(e,this.maxLength())}maxLength(){return this.constructor.maxLength}computeLengthAndMask(){let e=this.values.length,n=u.zero,o=[],r=b(!0);for(let i=0;i<e;i++){let l=this.values[i].isNull();o[i]=l.and(r),r=l.not().and(r),n.add(r.toField())}return o[e]=r,this._length=n,this._mask=o,{mask:o,length:n}}lengthMask(){return this._mask??this.computeLengthAndMask().mask}length(){return this._length??this.computeLengthAndMask().length}append(e){let n=this.maxLength();this.length().add(e.length()).assertLt(n);let o=this.values,r=kn(e.values,n),i=[];for(let s=0;s<n+1;s++)i[s]=o.slice(0,s).concat(r.slice(0,n-s));let l=[],a=this.lengthMask();for(let s=0;s<n;s++){let d=i.map(p=>p[s]);l[s]=Uo(d,a)}return new D(l)}hash(){return E.hash(this.values.map(e=>e.value))}substring(e,n){return new D(this.values.slice(e,n))}toString(){return this.values.map(e=>e.toString()).join("").replace(/[^ -~]+/g,"")}static fromString(e){if(e.length>this.maxLength)throw Error("CircuitString.fromString: input string exceeds max length!");let n=e.split("").map(o=>U.fromString(o));return new D(n)}};D.maxLength=mn;(0,ue.__decorate)([We(U,mn),(0,ue.__metadata)("design:type",Array)],D.prototype,"values",void 0);var gn=()=>new U(u.zero);function kn([...t],e){let n=gn();for(let o=t.length;o<e;o++)t[o]=n;return t}function Uo(t,e){let n=e.length;if(t.length!==n)throw Error("bug");let o=u.zero;for(let r=0;r<n;r++){let i=t[r].value.mul(e[r].toField());o=o.add(i)}return new U(o)}0&&(module.exports={Body,Bool,Character,Circuit,CircuitString,CircuitValue,Encoding,Encryption,Field,Group,Int64,Ledger,Mina,Party,Permission,Permissions,Pickles,Poseidon,Preconditions,PrivateKey,PublicKey,Scalar,Signature,SmartContract,State,Types,UInt32,UInt64,ZkappStateLength,addCachedAccount,addMissingProofs,addMissingSignatures,arrayProp,asFieldElementsToConstant,circuitArray,circuitMain,circuitValueEquals,cloneCircuitValue,declareMethods,declareState,deploy,fetchAccount,fetchLastBlock,getSrs,isReady,jsLayout,matrixProp,method,parseFetchedAccount,partiesToJson,prop,public_,recoverVerificationKey,sendZkapp,sendZkappQuery,serializeVerificationKey,setGraphqlEndpoint,shutdown,signFeePayer,signJsonTransaction,state,toPartiesUnsafe,toPartyUnsafe});
